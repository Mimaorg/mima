
@{
    //ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@{
    Html.RenderPartial("~/Views/Shared/navBar.cshtml");
}
@*<style>
   .form-control { display: inline-block !important; }
   
</style>*@

<style>
    .form-control {
    border: 1px solid white;
    border-radius: 5px;
}

    
    .select2-search__field {
    height:32px;
    }
</style>
<div class="loader"></div>
<input type="hidden" id="totalamountofmulticheque" />
    <div class="row text-center">
        <div class="col-md-12"><img src="~/Content/img/mima-constructionLogo.png" /></div>
        <div class="col-md-12"><h3>Bank Payment Voucher</h3></div>
        
    </div>
<div class="myDiv">
    <div class="row">

        <div class="col-md-12">
            @*"bankPaymentVoucherSubmit", "Home"*@
     @*"bankPaymentVoucherSubmit", "Home",FormMethod.Post,new {id="bankForm"}))*@

@using (Html.BeginForm("", "", FormMethod.Post, new { id = "bankForm" }))
    {
        
            
           <input type="hidden" class="chequehidden" name="chequesArray" id="chequeArrayhidden" />
           <input type="hidden" class="amounthidden" name="amountArray" id="amountArrayhidden" />
                <div class="formInnerDiv">
                   <input type="checkbox" class="ispending-checkBox"  name="isPending" value="true" id="isPending" style="display:none"/>
                    @*Submit as a Pending*@
                 
                <div class="form-group">
                    <label for="email">V.no:</label>
                    <input type="text"  class="form-control borderRem width-sm" id="Vnom" name="Vnumber" value="@ViewBag.vNum" autocomplete="off" required readonly>
                </div>
                <div class="form-group">
                    <label for="pwd">Date:</label>
                    <input type="text" class="form-control borderRem width-sm" id="date" readonly name="Date" required autocomplete="off"  >
                </div>
                   
            
                    @*<div class="form-group">
                        <label for="sel1">Bank:</label>
                        <input type="text" class="form-control borderRem width-sm" id="BanksList" name="Bank">
                    </div>*@

                    <div class="form-group">
                        <label for="sel1">Bank list:</label>
                        <select class="form-control width-sm" id="getDataBybankId" name="Bank">                            
                            @for (int i = 0; i < ViewBag.bank_Details_.Count; i++)
                            {
                                <option value="@ViewBag.bank_Details_[i]">@ViewBag.bank_Details_[i]</option>
                            }


                        </select>
                        <!--br-->

                    </div>
                    <div class="form-group">
                        <label for="sel1">Branch:</label>
                        <select class="form-control width-sm" id="branchDropDown" name="Branch">
                       
                            @{
                                foreach (var item in ViewBag.bank_Details)
                                {
                                    
                                    <option value="@item.Branch">@item.Branch</option>
                                }

                            }
                        </select>
                        <!--br-->

                    </div>
                    <div class="form-group">
                        <label for="sel1">Org:</label>
                        <select class="form-control width-sm" id="orgDropDown" name="Org">
                           
                            @{
                                foreach (var item in ViewBag.bank_Details)
                                {
                                    
                                    <option value="@item.Org">@item.Org</option>
                                }

                            }
                        </select>
                        <!--br-->

                    </div>

                    <div class="form-group">
                        <label for="sel1">Account:</label>
                        <select class="form-control width-sm" id="accountDropDown" name="Account">
                         
                            @{
                                foreach (var item in ViewBag.bank_Details)
                                {
                                  
                                    <option value="@item.Account">@item.Account</option>
                                }

                            }
                        </select>
                        <!--br-->

                    </div>
                    <div class="form-group">
                        <label for="sel1">Category:</label>
                        <select class="form-control width-sm" id="categoryDropDown" name="Category">

                            @{
                                foreach (var item in ViewBag.category)
                                {

                                    <option value="@item.Category">@item.Category</option>
                                }

                            }
                        </select>
                        <!--br-->
                    </div>

                    <div class="form-group">
                        <label for="pwd">Tax %:</label>
                        <input type="number" class="form-control borderRem width-sm taxinput" value="0" id="taxinput" name="taxpercentage" autocomplete="off" required>
                    </div>



                    <div class="form-group">
                        <label for="pwd">Cheque.no:</label>
                        
                         <input type="text" class="form-control borderRem width-sm chequeinpt" id="pwd" name="ChequeNo"  autocomplete="off" required>
                        <a href="javascript:;" id="openmulticheqmodal" style="padding-left:435px; color:black; font-size: 14px">more cheques</a>
                       
                    </div>


                    <div class="form-group">
                        <label for="pwd">P.D.C:</label>
                        <input type="date" class="form-control borderRem width-sm" id="pdcDate" name="pdcDate" autocomplete="off" required>
                    </div>

                    @*importtant*@
                    @*<div class="form-group" id="AccoutnDiv" style="display:none">
                        <label for="sel1">Account list:</label>
                        <select class="form-control width-sm" id="accountDropDown" name="AccountID">
                          
                        </select>
                        <br>

                    </div>*@
        </div>
        <div class="form-group">
            <label for="sel1">Paid To:</label>
            <select class="form-control borderRem width-lg select2" id="PaidTo" name="PaidTo">
               
                @*ViewBag.banksList*@
                @{
                    foreach (var item in ViewBag.paidTo)
                    {
                        @*<option value="@item.id">@item.Bank1</option>*@
                        <option value="@item.Paid_to">@item.Paid_to</option>
                    }

                }
            </select>
            <!--br-->

        </div>
        <div class="form-group">
            <label for="sel1">Control:</label>
            <select class="form-control borderRem width-lg select2" id="pwd" name="Control">
             
                @*ViewBag.banksList*@
                @{
                    foreach (var item in ViewBag.ControlDetails)
                    {
                        @*<option value="@item.id">@item.Bank1</option>*@
                        <option value="@item.Control">@item.Control</option>
                    }

                }
            </select>
            <!--br-->

        </div>
        @*<div class="form-group">
            <label for="pwd">Paid To:</label>
            <input type="text" class="form-control borderRem width-lg" id="pwd" autocomplete="off" name="PaidTo" required>
        </div>*@
        @*<div class="form-group">
            <label for="pwd">Control:</label>
            <input type="text" class="form-control borderRem width-lg" id="pwd" name="Control" required>
        </div>*@
        <div class=""></div>

        <div class="form-group">
            <label for="pwd">Tax Amount:</label>
            <input type="text" class="form-control borderRem width-lg" autocomplete="off" readonly id="taxamount" value="0" name="taxAmount" required>
        </div>

        <div class="form-group">
            <label for="pwd">Amount:</label>
            <input type="text" class="form-control borderRem width-lg amount" autocomplete="off" onkeyup="amount.innerHTML=convertNumberToWords(this.value)" id="amount" name="AmountWithComma" required>
        </div>
       
        <div class="form-group">
            <label for="pwd">Rupees:</label>
            <input type="text" class="form-control borderRem width-lg" autocomplete="off" id="rupees" readonly name="Rupees" required>
        </div>
        <div class="form-group">
            <label for="pwd">Description:</label>
            <input type="text" class="form-control borderRem width-lg" maxlength="50" autocomplete="off" id="Description" name="Description" required>
        </div>


                <button type="button" id="printPdf" class="btn btn-success submitBtn">Print</button>
                @*<button type="submit" class="btn btn-primary">Submit</button>*@
                <button type="button" id="resetBtn___" class="btn btn-danger refreshpage">Reset</button>
                @*<button type="submit" class="btn btn-light btnPending">Pending</button>*@
                <button type="button" id="submitdata" class="btn btn-light btnPending">Pending</button>


                    }

    </div>
    </div>
    <div id="editor"></div>
</div>

<!-- The Modal -->
<div class="modal" id="multicheqmodal">
    <div class="modal-dialog modal-lg">
        <div class="modal-content" style="background-color:#add8e6">

            <!-- Modal Header -->
            <div class="modal-header">
                <h4 class="modal-title">Enter Multiple Cheques</h4>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>

            <!-- Modal body -->
            <div class="modal-body">
                <table class="table" id="multipchequetable">
                    <thead>
                        <tr>
                            <th>Cheque #</th>
                            <th>Amount</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td><input type="number" maxlength="6" class="chequenumber" style="height:28px;border-radius:4px" /></td>
                            <td><input type="number" class="chequeamount" style="height:28px;border-radius:4px" /></td>
                        </tr>
                        <tr>
                            <td><input type="number" maxlength="6" class="chequenumber" style="height:28px;border-radius:4px" /></td>
                            <td><input type="number" class="chequeamount" style="height:28px;border-radius:4px" /></td>
                        </tr>
                        <tr>
                            <td><input type="number" maxlength="6" class="chequenumber" style="height:28px;border-radius:4px" /></td>
                            <td><input type="number" class="chequeamount" style="height:28px;border-radius:4px" /></td>
                        </tr>
                        <tr>
                            <td><input type="number" maxlength="6" class="chequenumber" style="height:28px;border-radius:4px" /></td>
                            <td><input type="number" class="chequeamount" style="height:28px;border-radius:4px" /></td>
                        </tr>
                        <tr>
                            <td><input type="number" maxlength="6" class="chequenumber" style="height:28px;border-radius:4px" /></td>
                            <td><input type="number" class="chequeamount" style="height:28px;border-radius:4px" /></td>
                        </tr>
                    </tbody>
                </table>
            </div>



            <!-- Modal footer -->
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" id="createmultichequeArray">Add</button>
                <button type="button" class="btn btn-danger" data-dismiss="modal">Done</button>
            </div>

        </div>
    </div>
</div>



<script>

    // numeral


    $(document).ready(function () {
        var chequeArray = [];
        var amountArray = [];
       
    $('.select2').select2();


       // document.addEventListener('DOMContentLoaded', () => {
             new Cleave('.amount', {
                 numeral: true,
                numeralThousandsGroupStyle: 'thousand'
            });
       // });
            $("#printPdf").click(function () {
                
                var isEmpty= false;
               // $("input:not(.chequehidden , .amounthidden)").each(function () {
                $("#bankForm").find("input:not(.chequehidden ,.amounthidden)").each(function () {
                debugger;
                   
                    if ($(this).val() == "") {
                        
                        $(this).css('border-color', 'red');
                        isEmpty = true;
                       
                    } else {
                        $(this).css('border-color', 'white');
                   
                    }

                })

                if (!isEmpty) {
                    debugger
                    $(document).find(".loader").show();
                    //AJaxHelper.AjaxReqProcessor($("form").serialize(), false, 'Json', 'Post', 'sharting', 'Index');
                    //AJaxHelper.AjaxReqProcessor($("form").serialize(), false, 'Json', 'Post', 'newBankPendingVoucherPrint', 'Index');
                    if (AJaxHelper.result != null) {
                        $(".loader").hide();
                        printPreview(AJaxHelper.result)

                    } else {
                        return false;

                    }
              }
            })



        //-------------//


        function printPreview(data) {
            var type = 'application/pdf';
            let blob = null;
            const blobURL = URL.createObjectURL(pdfBlobConversion(data, 'application/pdf'));
            const theWindow = window.open(blobURL);
            const theDoc = theWindow.document;
            const theScript = document.createElement('script');
            function injectThis() {
                window.print();
            }
            theScript.innerHTML = 'window.onload = ${injectThis.toString()};';
            theDoc.body.appendChild(theScript);
        }
        //converts base64 to blob type for windows
        function pdfBlobConversion(b64Data, contentType) {
            contentType = contentType || '';
            var sliceSize = 512;
            b64Data = b64Data.replace(/^[^,]+,/, '');
            b64Data = b64Data.replace(/\s/g, '');
            var byteCharacters = window.atob(b64Data);
            var byteArrays = [];

            for (var offset = 0; offset < byteCharacters.length; offset = offset + sliceSize) {
                var slice = byteCharacters.slice(offset, offset + sliceSize);

                var byteNumbers = new Array(slice.length);
                for (var i = 0; i < slice.length; i++) {
                    byteNumbers[i] = slice.charCodeAt(i);
                }

                var byteArray = new Uint8Array(byteNumbers);

                byteArrays.push(byteArray);
            }

            var blob = new Blob(byteArrays, { type: contentType });
            return blob;
        }


        //-------------//
        //$("body").css("background-color", "#FFC0CB");
        debugger;
        @*var VoucherNom = @Html.Raw(ViewBag.vNum);
        $("#Vnom").val("000"+VoucherNom);*@

        $(".btnPending").hover(function(){
            //$('#bankForm').attr('action', '/Home/PendingSubmit');
            //$("#isPending").val(1)
            $("#isPending"). prop("checked", true);

        }, function(){
            //$('#bankForm').attr('action', '/Home/bankPaymentVoucherSubmit');
            //$("#isPending").val(0)
            $("#isPending"). prop("checked", false);
        });
    
    
        $(".refreshpage").click(function () {
         
            window.location.href = "/Home/PaymentForm";
        })
      

        $("#openmulticheqmodal").click(function () {
            $("#multicheqmodal").modal("show");
        })

        $("#createmultichequeArray").click(function () {
            debugger;
            var amount = 0;
             chequeArray = [];
             amountArray = [];
            $("#multipchequetable tbody tr").find(".chequenumber").each(function (i, e) {
                if ($(e).val() != "") {
                    chequeArray.push($(e).val())
                }
            })
            $("#multipchequetable tbody tr").find(".chequeamount").each(function (i, e) {
                if ($(e).val() != "") {
                    //totalamountofmulticheque
                    amount += parseInt($(e).val());
                    amountArray.push($(e).val())
                }
            })
            if (chequeArray.length == 0) {
                alert("Please write Cheque Numbers.");
                return false;
            }
            else if (amountArray.length == 0) {
                alert("Please write Amount.");
                return false;
            } else {

                if (chequeArray.length != amountArray.length) {
                    alert("Cheque numbers and amount count does not match. ")
                } else {
                    var texpercetn = $("#taxinput").val();
                    
                    var calculatedamount = Math.round(percentage(amount, texpercetn));
                    var remainingamount = amount - calculatedamount;
                    console.log(calculatedamount)
                    $("#taxamount").val(calculatedamount);
                   // console.log(percentage(100000, 4.5));

                    $("#chequeArrayhidden").val(chequeArray);
                    $("#amountArrayhidden").val(amountArray);
                    $("#amount").val(remainingamount);
                    $(".chequeinpt").val(chequeArray[0]);
                    $("#amount").trigger("keyup");
                    alert("Cheque numbers set in the run time memory.")
                }
            }

        })

        //-----submit data //
        $("#submitdata").click(function () {
            debugger;

            if ($(".chequehidden").val() == "") {
                $("input[name=ChequeNo]").removeClass("chequeinpt");
            }

            var isEmpty = false;
            $("#bankForm").find("input:not(.chequeinpt , .chequehidden ,.amounthidden)").each(function () {
                debugger;

                if ($(this).val() == "") {

                    $(this).css('border-color', 'red');
                    isEmpty = true;

                } else {
                    $(this).css('border-color', 'white');

                }

            })
            if (!isEmpty) {

                var controllerdata = {}
                controllerdata.chequesArray = $("#chequeArrayhidden").val();
                controllerdata.amountArray = $("#amountArrayhidden").val();
                controllerdata.data = $("#bankForm").serialize();

                AJaxHelper.AjaxReqProcessor($("form").serialize(), false, 'Json', 'Post', 'Home', 'bankPaymentVoucherSubmit');
                window.location.href = "/Home/PaymentForm";


            

                if (AJaxHelper.result != null) {

                  

                } else {
                    return false;

                }
            }
        })
        //-------------//

       

    })//end document .ready

    $(document).ready(function() {
        @*debugger;
        var BankList = @Html.Raw(ViewBag.banksList);
      console.log(BankList);
        $( "#BanksList" ).autocomplete({
            source: BankList
        
        });*@

        //--------PDC TODAY DATE BIND ON PAGE LOAD-----------//
        var now = new Date();
        var day = ("0" + now.getDate()).slice(-2);
        var month = ("0" + (now.getMonth() + 1)).slice(-2);
        var today = now.getFullYear() + "-" + (month) + "-" + (day);
        $('#pdcDate').val(today);
        //--------END THIS----------// 


        //--------date work--------//
        var today = new Date();
        var dd = String(today.getDate()).padStart(2, '0');
        var mm = String(today.getMonth()); 
        var yyyy = today.getFullYear()

        const monthNames = ["January", "February", "March", "April", "May", "June",
  "July", "August", "September", "October", "November", "December"
        ];

        var month =monthNames[today.getMonth()];
        var todayDate=dd+"/"+month+"/"+yyyy

        $("#date").val(todayDate);
        //--------date work--------//


        var resutl = [];
        //----according to bank bind three dropdownlist branch, org, account----//
        $('#getDataBybankId').change(function () {
            BindDropdowns(1, "#getDataBybankId", null, null);
        })
        //----according to bank bing three dropdownlist branch, org, account----//

        //---- according bank and branch bind two dropdownlist org and account----//
        $('#branchDropDown').change(function () {
            BindDropdowns(2, "#getDataBybankId", "#branchDropDown", null);
        })
        //---- according bank and branch bind two dropdownlist org and account----//

        //---- according bank and branch and org bind one dropdown account ----//
        $('#orgDropDown').change(function () {
            BindDropdowns(3, "#getDataBybankId", "#branchDropDown", "#orgDropDown");
        })
        //---- according bank and branch and org bind one dropdown account ----//



    });


    //------amount to words------//

    function convertNumberToWords(amount) {
        var words = new Array();
        words[0] = '';
        words[1] = 'One';
        words[2] = 'Two';
        words[3] = 'Three';
        words[4] = 'Four';
        words[5] = 'Five';
        words[6] = 'Six';
        words[7] = 'Seven';
        words[8] = 'Eight';
        words[9] = 'Nine';
        words[10] = 'Ten';
        words[11] = 'Eleven';
        words[12] = 'Twelve';
        words[13] = 'Thirteen';
        words[14] = 'Fourteen';
        words[15] = 'Fifteen';
        words[16] = 'Sixteen';
        words[17] = 'Seventeen';
        words[18] = 'Eighteen';
        words[19] = 'Nineteen';
        words[20] = 'Twenty';
        words[30] = 'Thirty';
        words[40] = 'Forty';
        words[50] = 'Fifty';
        words[60] = 'Sixty';
        words[70] = 'Seventy';
        words[80] = 'Eighty';
        words[90] = 'Ninety';
        amount = amount.toString();
        var atemp = amount.split(".");
        var number = atemp[0].split(",").join("");
        var n_length = number.length;
        var words_string = "";
        if (n_length <= 9) {
            var n_array = new Array(0, 0, 0, 0, 0, 0, 0, 0, 0);
            var received_n_array = new Array();
            for (var i = 0; i < n_length; i++) {
                received_n_array[i] = number.substr(i, 1);
            }
            for (var i = 9 - n_length, j = 0; i < 9; i++, j++) {
                n_array[i] = received_n_array[j];
            }
            for (var i = 0, j = 1; i < 9; i++, j++) {
                if (i == 0 || i == 2 || i == 4 || i == 7) {
                    if (n_array[i] == 1) {
                        n_array[j] = 10 + parseInt(n_array[j]);
                        n_array[i] = 0;
                    }
                }
            }
            value = "";
            for (var i = 0; i < 9; i++) {
                if (i == 0 || i == 2 || i == 4 || i == 7) {
                    value = n_array[i] * 10;
                } else {
                    value = n_array[i];
                }
                if (value != 0) {
                    words_string += words[value] + " ";
                }
                if ((i == 1 && value != 0) || (i == 0 && value != 0 && n_array[i + 1] == 0)) {
                    words_string += "Crores ";
                }
                if ((i == 3 && value != 0) || (i == 2 && value != 0 && n_array[i + 1] == 0)) {
                    words_string += "Lakhs ";
                }
                if ((i == 5 && value != 0) || (i == 4 && value != 0 && n_array[i + 1] == 0)) {
                    words_string += "Thousand ";
                }
                if (i == 6 && value != 0 && (n_array[i + 1] != 0 && n_array[i + 2] != 0)) {
                    words_string += "Hundred and ";
                } else if (i == 6 && value != 0) {
                    words_string += "Hundred ";
                }
            }
            words_string = words_string.split("  ").join(" ");
        }
       
        //----i added this code seperatly to calculate the percentage on onkeyup-----//
        //function percentage(num, per) {
          //  return (num / 100) * per;
        //}
        //var texpercetn = $("#taxinput").val();
        //var calculatetex = (amount.replace(/,/g, '') / 100) * texpercetn;
        //var removepoint = Math.round(calculatetex)
       
        //$("#taxamount").val(removepoint);
        //----------//

        $('#rupees').val(words_string);   
        return words_string;
       
       
    }

    //------amount to words------//


    function BindDropdowns(type, bankdropdownId, branchdropdownId, OrgdropdownId) {
        var drow;
        var branchDrow;
        var orgDrow;
        var accountDrow;
        var Bank_ = $(bankdropdownId + " option:selected").val();
        var Branch_ = $(branchdropdownId + " option:selected").val();
        var Org_ = $(OrgdropdownId + " option:selected").val();
        var objforcontroller = {};
        objforcontroller.Bank = $.trim(Bank_);
        objforcontroller.Branck = $.trim(Branch_);
        objforcontroller.org = $.trim(Org_);
        objforcontroller.type = type;
        AJaxHelper.AjaxReqProcessor(objforcontroller, false, 'Json', 'Post', 'Home', 'AccountsByBankId');
        resutl = AJaxHelper.result;
        debugger;
        var obj = JSON.parse(resutl);
        let branchDropDown = $('#branchDropDown');
        let orgDropDown = $('#orgDropDown');
        let accountDropDown = $('#accountDropDown');
        if (obj.length == 0) {
            branchDropDown.empty();
            orgDropDown.empty();
            accountDropDown.empty();
            branchDropDown.append('<option selected="true" disabled>no record found</option>');
            orgDropDown.append('<option selected="true" disabled>no record found</option>');
            accountDropDown.append('<option selected="true" disabled>no record found</option>');
            branchDropDown.prop('selectedIndex', 0);
            orgDropDown.prop('selectedIndex', 0);
            accountDropDown.prop('selectedIndex', 0);
        } else {
            for (var i = 0; i < obj.length; i++) {
                branchDrow += '<option value="' + obj[i].Branch + '">' + obj[i].Branch + '</option>'
                orgDrow += '<option value="' + obj[i].Org + '">' + obj[i].Org + '</option>'
                accountDrow += '<option value="' + obj[i].Account + '">' + obj[i].Account + '</option>'
            }
            if (type=='1') {
                branchDropDown.empty();
                branchDropDown.html(branchDrow)
                orgDropDown.empty();
                orgDropDown.append(orgDrow)
                accountDropDown.empty();
                accountDropDown.append(accountDrow)
            }
            else if(type =='2') {
                orgDropDown.empty();
                orgDropDown.append(orgDrow)
                accountDropDown.empty();
                accountDropDown.append(accountDrow)
            } else if (type == '3') {
                accountDropDown.empty();
                accountDropDown.append(accountDrow)

            } else {

                return false;
            }
        }




    }
    function percentage(num, per) {
        return (num / 100) * per;
    }

</script>